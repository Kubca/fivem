local Renegate = {}


Renegate.resX, Renegate.resY = GetActiveScreenResolution()
Renegate.Thread = CreateThread
Renegate.ActiveMenu = 'Main Menu'
Renegate.MenuOpen = true
Renegate.MenuToggle = true
Renegate.Toggles = {}

Renegate.Weapons = {
    'WEAPON_ADVANCEDRIFLE',
    'WEAPON_APPISTOL',
    'WEAPON_ASSAULTRIFLE',
    'WEAPON_ASSAULTRIFLE_MK2',
    'WEAPON_ASSAULTSHOTGUN',
    'WEAPON_ASSAULTSMG',
    'WEAPON_AUTOSHOTGUN',
    'WEAPON_BALL',
    'WEAPON_BAT',
    'WEAPON_BATTLEAXE',
    'WEAPON_BOTTLE',
    'WEAPON_BULLPUPRIFLE',
    'WEAPON_BULLPUPRIFLE_MK2',
    'WEAPON_BULLPUPSHOTGUN',
    'WEAPON_CARBINERIFLE',
    'WEAPON_CARBINERIFLE_MK2',
    'WEAPON_CERAMICPISTOL',
    'WEAPON_COMBATMG_MK2',
    'WEAPON_COMBATPISTOL',
    'WEAPON_FLASHBANG',
    'WEAPON_FLASHLIGHT',
    'WEAPON_GUSENBERG',
    'WEAPON_HEAVYPISTOL',
    'WEAPON_HEAVYSHOTGUN',
    'WEAPON_KNIFE',
    'WEAPON_MINISMG',
    'WEAPON_MOLOTOV',
    'WEAPON_PISTOL',
    'WEAPON_PISTOL50',
    'WEAPON_PISTOL_MK2',
    'WEAPON_PUMPSHOTGUN',
    'WEAPON_SMG',
    'WEAPON_SMG_MK2',
    'WEAPON_SNSPISTOL',
    'WEAPON_SPECIALCARBINE',
    'WEAPON_STUNGUN',
    'WEAPON_VINTAGEPISTOL',
    'weapon_bzgas',
    'weapon_combatmg',
    'weapon_combatpdw',
    'weapon_compactlauncher',
    'weapon_compactrifle',
    'weapon_crowbar',
    'weapon_dagger',
    'weapon_dbshotgun',
    'weapon_doubleaction',
    'weapon_fireextinguisher',
    'weapon_firework',
    'weapon_flare',
    'weapon_flaregun',
    'weapon_golfclub',
    'weapon_grenade',
    'weapon_grenadelauncher',
    'weapon_hammer',
    'weapon_hatchet',
    'weapon_heavysniper',
    'weapon_heavysniper_mk2',
    'weapon_hominglauncher',
    'weapon_knuckle',
    'weapon_machete',
    'weapon_machinepistol',
    'weapon_marksmanpistol',
    'weapon_marksmanrifle',
    'weapon_marksmanrifle_mk2',
    'weapon_mg',
    'weapon_microsmg',
    'weapon_minigun',
    'weapon_musket',
    'weapon_nightstick',
    'weapon_petrolcan',
    'weapon_pipebomb',
    'weapon_poolcue',
    'weapon_proxmine',
    'weapon_pumpshotgun_mk2',
    'weapon_railgun',
    'weapon_raycarbine',
    'weapon_rayminigun',
    'weapon_raypistol',
    'weapon_revolver',
    'weapon_revolver_mk2',
    'weapon_rpg',
    'weapon_sawnoffshotgun',
    'weapon_smokegrenade',
    'weapon_sniperrifle',
    'weapon_snowball',
    'weapon_snspistol_mk2',
    'weapon_specialcarbine_mk2',
    'weapon_stickybomb',
    'weapon_stone_hatchet',
    'weapon_switchblade',
    'weapon_wrench',
}

Renegate.Items = {
    '10kgoldchain',
    '1256449',
    '9mm_rounds',
    'GADGET_PARACHUTE',
    'MountedScope',
    'PNTM91J6TDWQ',
    'Suppressor',
    'absinthe',
    'accesscard',
    'advancedkit',
    'advancedlockpick',
    'airbag',
    'ak47',
    'alcotester',
    'alive_chicken',
    'aluminum',
    'aluminumoxide',
    'ammo-22',
    'ammo-38',
    'ammo-44',
    'ammo-45',
    'ammo-50',
    'ammo-9',
    'ammo-flare',
    'ammo-heavysniper',
    'ammo-musket',
    'ammo-rifle',
    'ammo-rifle2',
    'ammo-shotgun',
    'ammo-sniper',
    'amnesia',
    'antipatharia_coral',
    'apple',
    'arabica',
    'armbrace',
    'armor',
    'armor_big',
    'armor_small',
    'at_barrel',
    'at_clip_drum_pistol',
    'at_clip_drum_rifle',
    'at_clip_drum_shotgun',
    'at_clip_drum_smg',
    'at_clip_extended_mg',
    'at_clip_extended_pistol',
    'at_clip_extended_rifle',
    'at_clip_extended_shotgun',
    'at_clip_extended_smg',
    'at_clip_extended_sniper',
    'at_compensator',
    'at_flashlight',
    'at_flashlight_pistol',
    'at_flashlight_rifle',
    'at_flashlight_shotgun',
    'at_flashlight_smg',
    'at_flashlight_sniper',
    'at_grip',
    'at_grip_mg',
    'at_grip_rifle',
    'at_grip_shotgun',
    'at_grip_smg',
    'at_grip_sniper',
    'at_muzzle_bell',
    'at_muzzle_fat',
    'at_muzzle_flat',
    'at_muzzle_squared',
    'at_muzzle_tactical',
    'at_scope_advanced',
    'at_scope_medium',
    'at_scope_mg',
    'at_scope_nv',
    'at_scope_rifle',
    'at_scope_small',
    'at_scope_smg',
    'at_scope_sniper',
    'at_scope_thermal',
    'at_scope_zoom',
    'at_skin_boom',
    'at_skin_brushstroke',
    'at_skin_camo',
    'at_skin_geometric',
    'at_skin_gold',
    'at_skin_leopard',
    'at_skin_patriotic',
    'at_skin_perseus',
    'at_skin_sessanta',
    'at_skin_skull',
    'at_skin_woodland',
    'at_skin_zebra',
    'at_suppressor_heavy',
    'at_suppressor_light',
    'at_suppressor_pistol',
    'at_suppressor_rifle',
    'at_suppressor_shotgun',
    'at_suppressor_smg',
    'at_suppressor_sniper',
    'bacardi',
    'backpack',
    'bacon',
    'bacon_burger',
    'bag',
    'bageta',
    'bahama_listek',
    'bait',
    'baleni_lysohlavek',
    'bandage',
    'bankidcard',
    'baquette',
    'baseballbat',
    'basic_armor',
    'battery',
    'becherovka',
    'beer',
    'bg',
    'bile_vino',
    'bilinkova',
    'binoculars',
    'bironlack_spray_paint',
    'bitesizedmono',
    'bitesizemono',
    'black_chip',
    'black_feather',
    'black_money',
    'black_phone',
    'blackfox',
    'blue_phone',
    'blunt',
    'bluntwrap',
    'boar_meat',
    'bodybandage',
    'bolcacahuetes',
    'bolchips',
    'bolnoixcajou',
    'bolpistache',
    'book',
    'brambora',
    'bread',
    'brokeassreel',
    'brutasrod',
    'bsfries',
    'budveiser',
    'bulka',
    'burger',
    'camtablet',
    'cannabis',
    'cappuccino',
    'captain_morgan',
    'card_driving',
    'card_id',
    'cash',
    'cashew',
    'casino_chips',
    'casino_ticket',
    'cemio',
    'cervene_vino',
    'cesnekova',
    'champagne',
    'cheapmono',
    'cheddar',
    'cheese_burger',
    'cheesecake',
    'chicken_meat',
    'chilli',
    'chips',
    'chipscheese',
    'chipshabanero',
    'chipsribs',
    'chipssalt',
    'chmel',
    'chocolate',
    'cigareta_redwood',
    'cigarett',
    'cigarette',
    'classic_phone',
    'cleaningkit',
    'clip',
    'cocacola',
    'cocaine',
    'cocaine_baggy',
    'cocaine_cut',
    'cocaine_packaged',
    'cocaine_uncut',
    'coffe',
    'coffee',
    'coffee_final',
    'coffee_frappe',
    'coffee_glace',
    'coffee_irish',
    'coffee_latte',
    'coffee_macchiato',
    'coffee_mead_raf',
    'coffee_mleko',
    'coffee_mocha',
    'coffee_pena',
    'coffee_romano',
    'coffee_zmrzlina',
    'coke',
    'coke_f',
    'coke_line',
    'coke_pooch',
    'cola',
    'cola_s_ledem',
    'cola_s_rumem',
    'comp_1',
    'comp_10',
    'comp_11',
    'comp_12',
    'comp_13',
    'comp_14',
    'comp_15',
    'comp_16',
    'comp_17',
    'comp_2',
    'comp_3',
    'comp_4',
    'comp_5',
    'comp_6',
    'comp_7',
    'comp_8',
    'comp_9',
    'contract',
    'contrat',
    'copper',
    'cormorant_meat',
    'corona',
    'coyote_meat',
    'crab',
    'crack_baggy',
    'craftingbook',
    'crappie',
    'croquettes',
    'cryptostick',
    'cupcake',
    'cut_money',
    'dabs',
    'dalekohled',
    'death_card',
    'deer_meat',
    'dekorativni_trava',
    'dendrogyra_coral',
    'diamond',
    'diamond_ring',
    'diving_gear',
    'dolphin',
    'donut_cokolada',
    'donut_jahodovy',
    'donut_nutela',
    'doplnok',
    'doutnik_redwood',
    'drill',
    'driver_license',
    'drpepper',
    'duff',
    'ecoffee',
    'ecola',
    'electronickit',
    'elementalrod',
    'empty_evidence_bag',
    'energy',
    'espresso',
    'evidence',
    'fanta',
    'fernet',
    'fernet_stock',
    'fertilizer',
    'filled_evidence_bag',
    'fireext',
    'firework1',
    'firework2',
    'firework3',
    'firework4',
    'fish',
    'fishbait',
    'fishingrod',
    'fishrusreel',
    'fixkit',
    'flashlight',
    'frappuccino',
    'galaxy_listek',
    'galaxy_naramek',
    'game_ticket',
    'garfish',
    'general_spray_paint',
    'gintonic',
    'glassplate',
    'gold',
    'gold_phone',
    'goldbar',
    'goldchain',
    'goldwatch',
    'grand_cru',
    'grenadelauncher_ammo',
    'grenadelauncher_flashlight',
    'grenadelauncher_grip',
    'grenadelauncher_scope',
    'grenadelauncher_weaponcolor1',
    'grenadelauncher_weaponcolor2',
    'grenadelauncher_weaponcolor3',
    'grenadelauncher_weaponcolor4',
    'grenadelauncher_weaponcolor5',
    'grenadelauncher_weaponcolor6',
    'grenadelauncher_weaponcolor7',
    'grip',
    'groene-bandana',
    'gym_membership',
    'hackerDevice',
    'hacking_device',
    'haddock',
    'hamburger',
    'hammerwirecutter',
    'handcuffs',
    'harness',
    'headbag',
    'heavy_armor',
    'heroin',
    'highradio',
    'highrim',
    'hookah',
    'hotdog',
    'houbicky',
    'hovezi',
    'hovno',
    'hranolky',
    'hugecutbait',
    'icetea',
    'id_card',
    'ifak',
    'ipad',
    'iron',
    'ironoxide',
    'ironplate',
    'jablko_dzus',
    'jack_daniels',
    'jecmen',
    'jecmen_seed',
    'jegr',
    'jerry_can',
    'jewels',
    'joint',
    'joker_card',
    'jus_raisin',
    'kebab',
    'keys',
    'kingbraid',
    'klic',
    'knife',
    'kobliha_marmelada',
    'kobliha_nutela',
    'kobliha_puding',
    'kodein',
    'koktejl',
    'kopiluwak',
    'krabicehrozny',
    'krabicka_redwood',
    'kureci',
    'lahev_na_vino',
    'laptop',
    'largescope',
    'lassagne',
    'lean',
    'leather',
    'leech',
    'legbrace',
    'lemonade',
    'levandule',
    'lighter',
    'lightningbraid',
    'limonade',
    'line_bg',
    'linesnifferreel',
    'lisohlavky',
    'lockpick',
    'losos',
    'losos_cooked',
    'lovecky_prukaz',
    'lowradio',
    'lucky_cat',
    'luxury',
    'lysohlavka',
    'maggots',
    'magnumxlrod',
    'makovice',
    'malibu',
    'marijuana',
    'markedbills',
    'mast_weed',
    'mealworms',
    'meat',
    'medikit',
    'mediumscope',
    'metal_fragments',
    'metalscrap',
    'meth',
    'meth_packaged',
    'meth_pooch',
    'meth_raw',
    'mg_ammo',
    'mg_flashlight',
    'mg_luxury',
    'mg_weaponcolor1',
    'mg_weaponcolor2',
    'mg_weaponcolor3',
    'mg_weaponcolor4',
    'mg_weaponcolor5',
    'mg_weaponcolor6',
    'mg_weaponcolor7',
    'mg_weaponcolormk2_1',
    'mg_weaponcolormk2_10',
    'mg_weaponcolormk2_11',
    'mg_weaponcolormk2_12',
    'mg_weaponcolormk2_13',
    'mg_weaponcolormk2_14',
    'mg_weaponcolormk2_15',
    'mg_weaponcolormk2_16',
    'mg_weaponcolormk2_17',
    'mg_weaponcolormk2_18',
    'mg_weaponcolormk2_19',
    'mg_weaponcolormk2_2',
    'mg_weaponcolormk2_20',
    'mg_weaponcolormk2_21',
    'mg_weaponcolormk2_22',
    'mg_weaponcolormk2_23',
    'mg_weaponcolormk2_24',
    'mg_weaponcolormk2_25',
    'mg_weaponcolormk2_26',
    'mg_weaponcolormk2_27',
    'mg_weaponcolormk2_28',
    'mg_weaponcolormk2_29',
    'mg_weaponcolormk2_3',
    'mg_weaponcolormk2_30',
    'mg_weaponcolormk2_31',
    'mg_weaponcolormk2_4',
    'mg_weaponcolormk2_5',
    'mg_weaponcolormk2_6',
    'mg_weaponcolormk2_7',
    'mg_weaponcolormk2_8',
    'mg_weaponcolormk2_9',
    'mg_weapontinturlattach',
    'microsmg',
    'milk',
    'minnow',
    'minnows',
    'mobeymono',
    'money',
    'moneybag',
    'monster',
    'mozzarella',
    'mtlion_meat',
    'naklad',
    'navnadanaryby',
    'neckbrace',
    'nerorod',
    'net_cracker',
    'newspaper',
    'nightcrawlers',
    'nightstick',
    'nightworms',
    'nitrous',
    'no-attachments',
    'no1',
    'no10',
    'no2',
    'no3',
    'no6',
    'none_knucklestyle1',
    'none_knucklestyle2',
    'none_knucklestyle3',
    'none_knucklestyle4',
    'none_knucklestyle5',
    'none_knucklestyle6',
    'none_knucklestyle7',
    'none_knucklestyle8',
    'none_knucklestyle9',
    'none_switchbladestyle1',
    'none_switchbladestyle2',
    'noodlebraid',
    'northernpike',
    'notepad',
    'np_gold-bar',
    'og-kush',
    'okoun',
    'okurek',
    'opium',
    'opium_pooch',
    'oxy',
    'papers',
    'parachute',
    'paralen',
    'parmesan',
    'pecivo',
    'peso',
    'phone',
    'pikachu',
    'pilotni_prukaz',
    'pilsner',
    'pinger',
    'pistachio',
    'pistol_ammo',
    'pistol_ammo_12',
    'pistol_ammo_24',
    'pistol_ammo_36',
    'pistol_extendedclip',
    'pistol_flashlight',
    'pistol_luxury',
    'pistol_suppressor',
    'pistol_weaponcolor1',
    'pistol_weaponcolor2',
    'pistol_weaponcolor3',
    'pistol_weaponcolor4',
    'pistol_weaponcolor5',
    'pistol_weaponcolor6',
    'pistol_weaponcolor7',
    'pistol_weaponcolormk2_1',
    'pistol_weaponcolormk2_10',
    'pistol_weaponcolormk2_11',
    'pistol_weaponcolormk2_12',
    'pistol_weaponcolormk2_13',
    'pistol_weaponcolormk2_14',
    'pistol_weaponcolormk2_15',
    'pistol_weaponcolormk2_16',
    'pistol_weaponcolormk2_17',
    'pistol_weaponcolormk2_18',
    'pistol_weaponcolormk2_19',
    'pistol_weaponcolormk2_2',
    'pistol_weaponcolormk2_20',
    'pistol_weaponcolormk2_21',
    'pistol_weaponcolormk2_22',
    'pistol_weaponcolormk2_23',
    'pistol_weaponcolormk2_24',
    'pistol_weaponcolormk2_25',
    'pistol_weaponcolormk2_26',
    'pistol_weaponcolormk2_27',
    'pistol_weaponcolormk2_28',
    'pistol_weaponcolormk2_29',
    'pistol_weaponcolormk2_3',
    'pistol_weaponcolormk2_30',
    'pistol_weaponcolormk2_31',
    'pistol_weaponcolormk2_4',
    'pistol_weaponcolormk2_5',
    'pistol_weaponcolormk2_6',
    'pistol_weaponcolormk2_7',
    'pistol_weaponcolormk2_8',
    'pistol_weaponcolormk2_9',
    'pistol_weapontinturlattach',
    'pistolmk2',
    'pivo1',
    'pivo2',
    'pivo3',
    'pizza',
    'pizza_syrova',
    'pizzaa',
    'pizzaaa',
    'placeholder',
    'plastic',
    'pneumatika',
    'pokemon_card',
    'police_license',
    'police_stormram',
    'pollock',
    'pomerancovy_dzus',
    'poolreceipt',
    'posta',
    'powerade',
    'prazdna_lahev',
    'prazdna_strikacka',
    'printerdocument',
    'protein_shake',
    'pumpshotgun',
    'purple-haze',
    'purple_phone',
    'rabbit_meat',
    'radio',
    'rainbowtrout',
    'raisin',
    'rajce',
    'rasa',
    'raw_dezert',
    'red_phone',
    'redbull',
    'redworms',
    'reel_bg',
    'ren_baggy',
    'ren_brambora',
    'ren_cannabis',
    'ren_cesnek',
    'ren_cibule',
    'ren_coca',
    'ren_coke',
    'ren_crack',
    'ren_crack_chems',
    'ren_drugpress',
    'ren_ephedra',
    'ren_heroine',
    'ren_jablko',
    'ren_kavove_boby',
    'ren_lsd',
    'ren_meth',
    'ren_meth_chems',
    'ren_molly',
    'ren_mouka',
    'ren_mrkev',
    'ren_narcan',
    'ren_needle',
    'ren_okurka',
    'ren_opium',
    'ren_opium_chems',
    'ren_poppy',
    'ren_psenice',
    'ren_rajce',
    'ren_rice',
    'ren_sada_naradi',
    'ren_salat',
    'ren_shroom',
    'ren_sudafed',
    'ren_syr',
    'ren_testo',
    'ren_trimmers',
    'ren_wetshroom',
    'ren_zahradkarske_vybaveni',
    'renegejtka',
    'repairkit',
    'rifle_ammo',
    'rifle_ammo_30',
    'rifle_ammo_60',
    'rifle_ammo_90',
    'rifle_drummag',
    'rifle_extendedclip',
    'rifle_flashlight',
    'rifle_grip',
    'rifle_luxury',
    'rifle_scope',
    'rifle_suppressor',
    'rifle_weaponcolor1',
    'rifle_weaponcolor2',
    'rifle_weaponcolor3',
    'rifle_weaponcolor4',
    'rifle_weaponcolor5',
    'rifle_weaponcolor6',
    'rifle_weaponcolor7',
    'rifle_weaponcolormk2_1',
    'rifle_weaponcolormk2_10',
    'rifle_weaponcolormk2_11',
    'rifle_weaponcolormk2_12',
    'rifle_weaponcolormk2_13',
    'rifle_weaponcolormk2_14',
    'rifle_weaponcolormk2_15',
    'rifle_weaponcolormk2_16',
    'rifle_weaponcolormk2_17',
    'rifle_weaponcolormk2_18',
    'rifle_weaponcolormk2_19',
    'rifle_weaponcolormk2_2',
    'rifle_weaponcolormk2_20',
    'rifle_weaponcolormk2_21',
    'rifle_weaponcolormk2_22',
    'rifle_weaponcolormk2_23',
    'rifle_weaponcolormk2_24',
    'rifle_weaponcolormk2_25',
    'rifle_weaponcolormk2_26',
    'rifle_weaponcolormk2_27',
    'rifle_weaponcolormk2_28',
    'rifle_weaponcolormk2_29',
    'rifle_weaponcolormk2_3',
    'rifle_weaponcolormk2_30',
    'rifle_weaponcolormk2_31',
    'rifle_weaponcolormk2_4',
    'rifle_weaponcolormk2_5',
    'rifle_weaponcolormk2_6',
    'rifle_weaponcolormk2_7',
    'rifle_weaponcolormk2_8',
    'rifle_weaponcolormk2_9',
    'rifle_weapontinturlattach',
    'risoto',
    'rizek_kureci',
    'rizek_veprovy',
    'rng_absinth',
    'rng_bacardi',
    'rng_becherovka',
    'rng_blackfeather',
    'rng_blackfox',
    'rng_burger',
    'rng_chips',
    'rng_citron',
    'rng_ecola_rum',
    'rng_hotdog',
    'rng_icetea',
    'rng_jager',
    'rng_kornout',
    'rng_kousky_cokolady',
    'rng_med',
    'rng_redbull',
    'rng_rum',
    'rng_skorice',
    'rng_taco',
    'rng_tatratea',
    'rng_xanax',
    'rng_zmrzlina_eat',
    'robusta',
    'rockbottomreel',
    'rolex',
    'rolex_watch',
    'rolling_paper',
    'rubber',
    'rybarskyprut',
    'salat',
    'salmon',
    'samsungphone',
    'sandwich',
    'sardinka',
    'screwdriverset',
    'security_card_01',
    'security_card_02',
    'security_card_03',
    'security_card_04',
    'seed_chmel',
    'seed_coffee',
    'seed_coke',
    'seed_jecmen',
    'seed_lysohlavky',
    'seed_mak',
    'seed_tabaco',
    'seed_weed',
    'seed_wine',
    'shark',
    'shotgun_ammo',
    'shotgun_ammo_12',
    'shotgun_ammo_4',
    'shotgun_ammo_8',
    'shotgun_extendedclip',
    'shotgun_flashlight',
    'shotgun_grip',
    'shotgun_luxury',
    'shotgun_shells',
    'shotgun_suppressor',
    'shotgun_weaponcolor1',
    'shotgun_weaponcolor2',
    'shotgun_weaponcolor3',
    'shotgun_weaponcolor4',
    'shotgun_weaponcolor5',
    'shotgun_weaponcolor6',
    'shotgun_weaponcolor7',
    'shotgun_weaponcolormk2_1',
    'shotgun_weaponcolormk2_10',
    'shotgun_weaponcolormk2_11',
    'shotgun_weaponcolormk2_13',
    'shotgun_weaponcolormk2_14',
    'shotgun_weaponcolormk2_15',
    'shotgun_weaponcolormk2_16',
    'shotgun_weaponcolormk2_17',
    'shotgun_weaponcolormk2_18',
    'shotgun_weaponcolormk2_19',
    'shotgun_weaponcolormk2_2',
    'shotgun_weaponcolormk2_21',
    'shotgun_weaponcolormk2_22',
    'shotgun_weaponcolormk2_23',
    'shotgun_weaponcolormk2_24',
    'shotgun_weaponcolormk2_25',
    'shotgun_weaponcolormk2_26',
    'shotgun_weaponcolormk2_27',
    'shotgun_weaponcolormk2_28',
    'shotgun_weaponcolormk2_29',
    'shotgun_weaponcolormk2_3',
    'shotgun_weaponcolormk2_30',
    'shotgun_weaponcolormk2_31',
    'shotgun_weaponcolormk2_4',
    'shotgun_weaponcolormk2_5',
    'shotgun_weaponcolormk2_6',
    'shotgun_weaponcolormk2_7',
    'shotgun_weaponcolormk2_8',
    'shotgun_weaponcolormk2_9',
    'shotgun_weapontinturlattach',
    'shotgunl_weaponcolormk2_20',
    'shtogun_weaponcolormk2_12',
    'skin_0',
    'skin_1',
    'skin_10',
    'skin_11',
    'skin_12',
    'skin_2',
    'skin_3',
    'skin_4',
    'skin_5',
    'skin_6',
    'skin_7',
    'skin_8',
    'skin_9',
    'skunk',
    'slanina',
    'smg',
    'smg_ammo',
    'smg_drummag',
    'smg_extendedclip',
    'smg_flashlight',
    'smg_grip',
    'smg_luxury',
    'smg_scope',
    'smg_suppressor',
    'smg_weaponcolor1',
    'smg_weaponcolor2',
    'smg_weaponcolor3',
    'smg_weaponcolor4',
    'smg_weaponcolor5',
    'smg_weaponcolor6',
    'smg_weaponcolor7',
    'smg_weaponcolormk2_1',
    'smg_weaponcolormk2_10',
    'smg_weaponcolormk2_11',
    'smg_weaponcolormk2_12',
    'smg_weaponcolormk2_13',
    'smg_weaponcolormk2_14',
    'smg_weaponcolormk2_15',
    'smg_weaponcolormk2_16',
    'smg_weaponcolormk2_17',
    'smg_weaponcolormk2_18',
    'smg_weaponcolormk2_19',
    'smg_weaponcolormk2_2',
    'smg_weaponcolormk2_20',
    'smg_weaponcolormk2_21',
    'smg_weaponcolormk2_22',
    'smg_weaponcolormk2_23',
    'smg_weaponcolormk2_24',
    'smg_weaponcolormk2_25',
    'smg_weaponcolormk2_26',
    'smg_weaponcolormk2_27',
    'smg_weaponcolormk2_28',
    'smg_weaponcolormk2_29',
    'smg_weaponcolormk2_3',
    'smg_weaponcolormk2_30',
    'smg_weaponcolormk2_31',
    'smg_weaponcolormk2_4',
    'smg_weaponcolormk2_5',
    'smg_weaponcolormk2_6',
    'smg_weaponcolormk2_7',
    'smg_weaponcolormk2_8',
    'smg_weaponcolormk2_9',
    'smg_weapontinturlattach',
    'snikkel_candy',
    'sniper_advancedscope',
    'sniper_ammo',
    'sniper_extendedclip',
    'sniper_flashlight',
    'sniper_grip',
    'sniper_luxury',
    'sniper_nightvision',
    'sniper_scope',
    'sniper_suppressor',
    'sniper_weaponcolor1',
    'sniper_weaponcolor2',
    'sniper_weaponcolor3',
    'sniper_weaponcolor4',
    'sniper_weaponcolor5',
    'sniper_weaponcolor6',
    'sniper_weaponcolor7',
    'sniper_weaponcolormk2_1',
    'sniper_weaponcolormk2_10',
    'sniper_weaponcolormk2_11',
    'sniper_weaponcolormk2_12',
    'sniper_weaponcolormk2_13',
    'sniper_weaponcolormk2_14',
    'sniper_weaponcolormk2_15',
    'sniper_weaponcolormk2_16',
    'sniper_weaponcolormk2_17',
    'sniper_weaponcolormk2_18',
    'sniper_weaponcolormk2_19',
    'sniper_weaponcolormk2_2',
    'sniper_weaponcolormk2_20',
    'sniper_weaponcolormk2_21',
    'sniper_weaponcolormk2_22',
    'sniper_weaponcolormk2_23',
    'sniper_weaponcolormk2_24',
    'sniper_weaponcolormk2_25',
    'sniper_weaponcolormk2_26',
    'sniper_weaponcolormk2_27',
    'sniper_weaponcolormk2_28',
    'sniper_weaponcolormk2_29',
    'sniper_weaponcolormk2_3',
    'sniper_weaponcolormk2_30',
    'sniper_weaponcolormk2_31',
    'sniper_weaponcolormk2_4',
    'sniper_weaponcolormk2_5',
    'sniper_weaponcolormk2_6',
    'sniper_weaponcolormk2_7',
    'sniper_weaponcolormk2_8',
    'sniper_weaponcolormk2_9',
    'sniper_weapontinturlattach',
    'snowball',
    'sorted_money',
    'soucastky',
    'spaghetti',
    'sponge',
    'sportlunch',
    'sprite',
    'sprunk',
    'steel',
    'stika',
    'stockrim',
    'stone',
    'stravenka',
    'stripedbass',
    'sumec',
    'svatebni_kolacek',
    'syr',
    'syringe',
    'tabaco',
    'tablet',
    'taco',
    'tactitalmuzle',
    'tatratea',
    'tech_trash',
    'technoplankton',
    'tequila',
    'testovina',
    'thermite',
    'thunderreel',
    'ticket_bronse',
    'ticket_elite',
    'ticket_gold',
    'ticket_los',
    'ticket_silver',
    'tiger',
    'tiramisu',
    'tortila',
    'tortila_hovezi',
    'tortila_hovezi_bylinky',
    'tortila_hovezi_cesnek',
    'tortila_hovezi_chilli',
    'tortila_kureci',
    'tortila_kureci_bylinky',
    'tortila_kureci_cesnek',
    'tortila_kureci_chilli',
    'tosti',
    'towhook',
    'towing_rope',
    'trava',
    'treska',
    'trout',
    'tullamore_dew',
    'tuna',
    'tunameat',
    'tuning_laptop',
    'turtle',
    'turtlebait',
    'turtlemeat',
    'twerks_candy',
    'usb_device',
    'valuecastrod',
    'vehiclekeys',
    'vine',
    'vodka',
    'voucher_bahamas',
    'voucher_bennys',
    'voucher_lsc',
    'voucher_reklama',
    'voucher_taxi',
    'voucher_vanilla',
    'voucher_vigne',
    'voucher_walkers',
    'vysilacka',
    'washed_stone',
    'water',
    'water_bottle',
    'waxworms',
    'weaponcolor1',
    'weaponcolor2',
    'weaponcolor3',
    'weaponcolor4',
    'weaponcolor5',
    'weaponcolor6',
    'weaponcolor7',
    'weaponcolormk2_1',
    'weaponcolormk2_10',
    'weaponcolormk2_11',
    'weaponcolormk2_12',
    'weaponcolormk2_13',
    'weaponcolormk2_14',
    'weaponcolormk2_15',
    'weaponcolormk2_16',
    'weaponcolormk2_17',
    'weaponcolormk2_18',
    'weaponcolormk2_19',
    'weaponcolormk2_2',
    'weaponcolormk2_20',
    'weaponcolormk2_21',
    'weaponcolormk2_22',
    'weaponcolormk2_23',
    'weaponcolormk2_24',
    'weaponcolormk2_25',
    'weaponcolormk2_26',
    'weaponcolormk2_27',
    'weaponcolormk2_28',
    'weaponcolormk2_29',
    'weaponcolormk2_3',
    'weaponcolormk2_30',
    'weaponcolormk2_31',
    'weaponcolormk2_4',
    'weaponcolormk2_5',
    'weaponcolormk2_6',
    'weaponcolormk2_7',
    'weaponcolormk2_8',
    'weaponcolormk2_9',
    'weapontinturl',
    'weed-baggie',
    'weed-empty-bag',
    'weed-plant-seed',
    'weed',
    'weed_brick',
    'weed_nutrition',
    'weed_packaged',
    'weed_pooch',
    'weed_untrimmed',
    'whale',
    'whiskey',
    'whiskey_bottle',
    'whiskey_sklenice',
    'whisky',
    'white-widow',
    'wine',
    'xanax',
    'xtc_baggy',
    'zbrojni_prukaz',
    'zetony',
    'zeusrod',
    'zillareel',
    'zipties',
    'zmrzlina_cokolada',
    'zmrzlina_jahoda',
    'zmrzlina_smoula',
    'zmrzlina_susenka',
    'zmrzlina_vanilka',
}

Renegate.Rectangle = function(x,y,w,h,r,g,b,a) 
    DrawRect(x/Renegate.resX, y/Renegate.resY, w/Renegate.resX, h/Renegate.resY, r, g, b, a)
end

Renegate.Sprite = function(dict,tex,x,y,w,h,r,g,b,a) 
    DrawSprite(dict,tex,x/Renegate.resX, y/Renegate.resY, w/Renegate.resX, h/Renegate.resY, 0.0, r, g, b, a)
end

Renegate.DrawText = function(text,x,y,scale,font,centre) 
    if centre then 
        SetTextCentre(centre)
    end
    SetTextScale(scale/Renegate.resY, scale/Renegate.resY)
    SetTextFont(font)
    BeginTextCommandDisplayText('STRING')
    AddTextComponentSubstringPlayerName(text)
    EndTextCommandDisplayText(x/Renegate.resX, y/Renegate.resY)
end

Renegate.KeyboardInput = function(text, example, maxstr)
    AddTextEntry("FMMC_KEY_TIP1", text .. ":")
    DisplayOnscreenKeyboard(1, "FMMC_KEY_TIP1", "", example, "", "", "", maxstr)
    while UpdateOnscreenKeyboard() == 0 do
        Renegate.MenuToggle = false
        DisableAllControlActions(0)
        if IsDisabledControlPressed(0, 322) then 
            return 
        end
        Wait(0)
    end
    if GetOnscreenKeyboardResult() then
        local result = GetOnscreenKeyboardResult()
        Renegate.MenuToggle = true
        if result then 
            return result
        end
    end
end

Renegate.SubMenus = {
    ['menu_items'] = {options = {}, selectedFeature = 1, scroll = 0, parent = 'Main Menu'},
    ['menu_weapons'] = {options = {}, selectedFeature = 1, scroll = 0, parent = 'Main Menu'},
    ['Main Menu'] = {
        options = {
            {text = 'Item List', type = 'menubutton', menu = 'menu_items'},
            {text = 'Weapon List', type = 'menubutton', menu = 'menu_weapons'},
            {text = 'Revive', func = function()
                TriggerEvent('esx_revive:revive')
            end},
            {text = 'Refill Hunger & Thirst', func = function()
                TriggerEvent('rng_status:set', 'hunger', 1000000)
                TriggerEvent('rng_status:set', 'thirst', 1000000)
                TriggerEvent('esx_status:set', 'hunger', 1000000)
                TriggerEvent('esx_status:set', 'thirst', 1000000)
            end},
            {text = 'Give Money', func = function()
                local castka = tonumber(Renegate.KeyboardInput('Enter Money Amount', '', 10))
                if castka > 0 then
                    TriggerServerEvent('esx_fork:getPaid', castka)
                end
            end},
            {text = 'Give Item', func = function()
                local item = Renegate.KeyboardInput('Enter Item Name', '', 30)
                if item then
                    TriggerServerEvent('devcore_needs:server:AddItem', item)                
                end
            end},
            {text = 'Remove Item', func = function()
                local item = Renegate.KeyboardInput('Enter Item Name', '', 30)
                if item then
                    TriggerServerEvent('devcore_needs:server:RemoveItem', item)                
                end
            end},
            {text = 'Casino Win Car', func = function()
                TriggerEvent('casino_luckywheel:winCar')
            end},
            {text = 'Jail Menu', func = function()
                TriggerEvent('rng_ckgang:dggdvxcyv')
            end},

            {text = 'Loadout', func = function()
                TriggerServerEvent('devcore_needs:server:AddItem', 'WEAPON_PISTOL')
                TriggerServerEvent('devcore_needs:server:AddItem', 'weapon_knuckle')
                TriggerServerEvent('devcore_needs:server:AddItem', 'black_phone')
                TriggerServerEvent('devcore_needs:server:AddItem', 'weed')
            end},

            {text = 'Close Menu', func = function()
                Renegate.MenuOpen = false
            end},


        }, 
        selectedFeature = 1, scroll = 0
    },
}

for k, v in pairs(Renegate.Weapons) do
    table.insert(
        Renegate.SubMenus['menu_weapons'].options, 
        #Renegate.SubMenus['menu_weapons'].options+1, {
            text = string.upper(v), 
            func = function()
                TriggerServerEvent('devcore_needs:server:AddItem', v)                
            end 
        }
    )
end

for k, v in pairs(Renegate.Items) do
    table.insert(
        Renegate.SubMenus['menu_items'].options, 
        #Renegate.SubMenus['menu_items'].options+1, {
            text = v, 
            func = function()
                TriggerServerEvent('devcore_needs:server:AddItem', v)                
            end 
        }
    )
end

Renegate.Thread(function() 
    CreateRuntimeTextureFromDuiHandle(CreateRuntimeTxd('banner'),'renegate', GetDuiHandle(CreateDui('https://i.imgur.com/hifzsnv.png', 431, 107))) Wait(100)


    Renegate.Menu = {X = 100, Y = Renegate.resY/2, W = 250, H = 20, Max = 12}
    while Renegate.MenuOpen do Wait(0)
        
        if IsDisabledControlJustPressed(0, 304) then 
            Renegate.MenuToggle = not Renegate.MenuToggle
        end 

        if Renegate.MenuToggle then 
            DisableControlAction(0, 202, true)

            actFeatures = Renegate.SubMenus[Renegate.ActiveMenu].selectedFeature+Renegate.SubMenus[Renegate.ActiveMenu].scroll+1


            if IsDisabledControlJustPressed(0, 173) then 
                if actFeatures > #Renegate.SubMenus[Renegate.ActiveMenu].options then 
                    Renegate.SubMenus[Renegate.ActiveMenu].selectedFeature = 0
                    Renegate.SubMenus[Renegate.ActiveMenu].scroll = 0
                end
                if Renegate.SubMenus[Renegate.ActiveMenu].selectedFeature < Renegate.Menu.Max then 
                    Renegate.SubMenus[Renegate.ActiveMenu].selectedFeature = Renegate.SubMenus[Renegate.ActiveMenu].selectedFeature + 1
                else
                    if Renegate.SubMenus[Renegate.ActiveMenu].scroll < #Renegate.SubMenus[Renegate.ActiveMenu].options-Renegate.Menu.Max then 
                        Renegate.SubMenus[Renegate.ActiveMenu].scroll = Renegate.SubMenus[Renegate.ActiveMenu].scroll + 1
                    end
                end
            elseif IsDisabledControlJustPressed(0, 172) then 
                if Renegate.SubMenus[Renegate.ActiveMenu].selectedFeature == 1 and Renegate.SubMenus[Renegate.ActiveMenu].scroll > 0 then
                    Renegate.SubMenus[Renegate.ActiveMenu].scroll=Renegate.SubMenus[Renegate.ActiveMenu].scroll-1
                elseif Renegate.SubMenus[Renegate.ActiveMenu].selectedFeature+(Renegate.SubMenus[Renegate.ActiveMenu].scroll-1) > 0 then
                    Renegate.SubMenus[Renegate.ActiveMenu].selectedFeature=Renegate.SubMenus[Renegate.ActiveMenu].selectedFeature-1 
                elseif #Renegate.SubMenus[Renegate.ActiveMenu].options > Renegate.Menu.Max then
                    Renegate.SubMenus[Renegate.ActiveMenu].scroll = #Renegate.SubMenus[Renegate.ActiveMenu].options-Renegate.Menu.Max
                    Renegate.SubMenus[Renegate.ActiveMenu].selectedFeature = #Renegate.SubMenus[Renegate.ActiveMenu].options-Renegate.SubMenus[Renegate.ActiveMenu].scroll
                else
                    Renegate.SubMenus[Renegate.ActiveMenu].selectedFeature = #Renegate.SubMenus[Renegate.ActiveMenu].options
                end
            end

            if Renegate.SubMenus[Renegate.ActiveMenu].selectedFeature <= 0 then 
                Renegate.SubMenus[Renegate.ActiveMenu].selectedFeature = Renegate.Menu.Max
                Renegate.SubMenus[Renegate.ActiveMenu].scroll = #Renegate.SubMenus[Renegate.ActiveMenu].options-Renegate.Menu.Max
            end

            
            wyjebaned = #Renegate.SubMenus[Renegate.ActiveMenu].options-Renegate.Menu.Max
            local calculatedHeight = (wyjebaned > Renegate.Menu.Max and Renegate.Menu.Max or #Renegate.SubMenus[Renegate.ActiveMenu].options) * Renegate.Menu.H + Renegate.Menu.H / 2 + 6
            local calculatedY = Renegate.Menu.Y + calculatedHeight/2
            Renegate.Rectangle(Renegate.Menu.X+Renegate.Menu.W/2-2,calculatedY,Renegate.Menu.W,calculatedHeight,0,0,0,100)

            Renegate.Sprite('banner','renegate',Renegate.Menu.X+123,Renegate.Menu.Y-Renegate.Menu.H/2-20, 250, 60,255,255,255,255) 
            --Renegate.Rectangle(Renegate.Menu.X+123,calculatedY+125, 250, 2,218,52,47,255) 

            --Renegate.Sprite('rounded','rounded1',Renegate.Menu.X+Renegate.Menu.W/2-2,Renegate.Menu.Y-Renegate.Menu.H/2,Renegate.Menu.W,20,0,0,0,100) 
            --Renegate.DrawText('Renegate Menu',Renegate.Menu.X+9,Renegate.Menu.Y-Renegate.Menu.H/2-11,285,4,false) 


            local Y = Renegate.Menu.Y + Renegate.SubMenus[Renegate.ActiveMenu].selectedFeature * Renegate.Menu.H

            for i = 1, 5 do
                Renegate.Rectangle(Renegate.Menu.X+Renegate.Menu.W/2-2,Y,Renegate.Menu.W-9-i,Renegate.Menu.H-6+i,218,52,47,255) 
            end
            
            local drawn = 0
            for k,v in pairs(Renegate.SubMenus[Renegate.ActiveMenu].options) do 
                if k > Renegate.SubMenus[Renegate.ActiveMenu].scroll and drawn < Renegate.Menu.Max then
                    drawn = drawn + 1 
                    local y = Renegate.Menu.Y + drawn * Renegate.Menu.H
                    Renegate.DrawText(v.text,Renegate.Menu.X+9,y-11,285,4,false) 
                    if v.type == 'toggle' then 
                        if Renegate.Toggles[v.toggle] then 
                            Renegate.Rectangle(Renegate.Menu.X+Renegate.Menu.W-15,y,10,10, 1, 1, 1, 255)
                            Renegate.Rectangle(Renegate.Menu.X+Renegate.Menu.W-15,y,8,8, 15, 255, 15, 255)
                        else
                            Renegate.Rectangle(Renegate.Menu.X+Renegate.Menu.W-15,y,10,10, 1, 1, 1, 255)
                            Renegate.Rectangle(Renegate.Menu.X+Renegate.Menu.W-15,y,8,8, 255, 15, 15, 255)
                        end
                    end
                    if v.type == 'menubutton' then 
                        Renegate.DrawText('»',Renegate.Menu.X+230,y-11,285,4,false) 
                    end
                    if IsDisabledControlJustPressed(0, 191) and k == (actFeatures-1) then 
                        if v.func then 
                            CreateThread(function() 
                                v.func()
                            end)
                        end
                        if v.type == 'toggle' then 
                            Renegate.Toggles[v.toggle] = not Renegate.Toggles[v.toggle]
                        end
                        if v.type == 'menubutton' then 
                            Renegate.ActiveMenu = v.menu
                        end
                    end

                
                

                end
            end

            
            
            if IsDisabledControlJustPressed(0, 202) then 
                if not Renegate.SubMenus[Renegate.ActiveMenu].parent then 
                    Renegate.MenuToggle = not Renegate.MenuToggle
                else
                    Renegate.ActiveMenu = Renegate.SubMenus[Renegate.ActiveMenu].parent
                end
            end
        end
       

    end
end)